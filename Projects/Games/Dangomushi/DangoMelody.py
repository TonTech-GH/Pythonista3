from scene import *
import sound
import random
import math
from collections import namedtuple
from Dango import Dango as DG
from KeySound import MKey
A = Action

'''
定義
'''
# デバッグモード
DEBUG = False
def dp(*args):
	if DEBUG == False: return
	print(args)

# BGM
PLAY_BGM = True
BGM = 'sound/Yakusoku.mp3'
BGM = 'sound/loop/Break 02.mp3'

'''
# メロディ
'''
Melodies = {
'きみのぼうけん' : (
	'ソ3', 'ファ3', 'ミ3', 'ファ3', 'ソ3', 'ソ3', 'ソ3', 'ラ3', 'ラ3', 'シ3', 'シ3', 'ド4', 'シ3', 'ド4', 'レ4', 'シ3', 'ド4', 'ラ3', 'ソ3', 'ラ3', 'ド4', 'ド4', 'レ4', 'ミ4', 'ファ4', 'ミ4', 'ド4', 'ド4', 'ファ4', 'ミ4', 'レ4', 'ド4', 'ド4', 'レ4', 'レ4', 
),
'ちいさなせかい' : (	
	'ミ2', 'ファ2', 'ソ2', 'ミ3', 'ド3', 'レ3', 'ド3', 'ド3', 'シ2', 'シ2', 'レ2', 'ミ2', 'ファ2', 'レ3', 'シ2', 'ド3', 'シ2', 'ラ2', 'ソ2', 'ソ2', 'ミ2', 'ファ2', 'ソ2', 'ド3', 'レ3', 'ミ3', 'レ3', 'ド3', 'ラ2', 'レ3', 'ミ3', 'ファ3', 'ミ3', 'レ3', 'ソ2', 'ファ3', 'ミ3', 'レ3', 'ド3', 'ド3', 'ド3', 'ミ3', 'ド3', 'レ3', 'レ3', 'レ3', 'レ3', 'レ3', 'ファ3', 'レ3', 'ミ3', 'ミ3', 'ミ3', 'ミ3', 'ミ3', 'ソ3', 'ミ3', 'ファ3', 'ファ3', 'ファ3', 'ミ3', 'レ3', 'ソ2', 'ファ3', 'ミ3', 'レ3', 'ド3', 
),
'子犬のマーチ' : (
	'ミ3', 'ド3', 'ミ3', 'ド3', 'ミ3', 'ソ3', 'ソ3', 'ファ3', 'レ3', 'レ3', 'ミ3', 'ド3', 'ド3', 'ミ3', 'ド3', 'ミ3', 'ド3', 'ミ3', 'ソ3', 'ソ3', 'ファ3', 'レ3', 'レ3', 'ド3', 'ミ3', 'ド3', 
),
'颯くん2/2' : (
	'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ソ3', 'ソ3', 'ミ3', 'ミ3', 'レ3', 'レ3', 'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'レ3', 'レ3', 'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ソ3', 'ソ3', 'ミ3', 'ミ3', 'レ3', 'レ3', 'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ド3', 'ド3', 'ソ3', 'ソ3', 'ソ3', 'ソ3', 'ミ3', 'ミ3', 'ソ3', 'ソ3', 'ラ3', 'ラ3', 'ラ3', 'ラ3', 'ソ3', 'ソ3', 'ミ3', 'ミ3', 'ミ3', 'ミ3', 'レ3', 'レ3', 'レ3', 'レ3', 'ド3', 'ド3', 'ド3', 'ド3', 
),
'颯くん短い歌' : (
	'ド2', 'ド2', 'ソ2', 'ソ2', 'ラ2', 'ラ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'レ2', 'ド2', 'ソ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'ソ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'ド2', 'ド2', 'ソ2', 'ソ2', 'ラ2', 'ラ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'レ2', 'ド2', 
),
'君の冒険' : (
	'ソ2', 'ファ2', 'ミ2', 'ファ2', 'ソ2', 'ソ2', 'ソ2', 'ラ2', 'ラ2', 'シ2', 'シ2', 'ド3', 'シ2', 'ド3', 'レ3', 'シ2', 'ド3', 'ラ2', 'ソ2', 'ラ2', 'ド3', 'ド3', 'レ3', 'ミ3', 'ファ3', 'ミ3', 'ド3', 'ド3', 'ファ3', 'ミ3', 'レ3', 'ド3', 'ド3', 'レ3', 'レ3', 
),
	
'カエルの歌' : (
'ド3', 'レ3', 'ミ3', 'ファ3', 'ミ3', 'レ3', 'ド3', 
'ミ3', 'ファ3', 'ソ3', 'ラ3', 'ソ3', 'ファ3', 'ミ3', 
'ド3', 'ド3', 'ド3', 'ド3', 
'ド3', 'ド3', 'レ3', 'レ3', 'ミ3', 'ミ3', 'ファ3', 'ファ3', 'ミ3', 'レ3', 'ド3', 
),

'ドレミの歌' : (
'ド3', 'レ3', 'ミ3', 'ド3', 'ミ3', 'ド3', 'ミ3', 
'レ3', 'ミ3', 'ファ3', 'ファ3', 'ミ3', 'レ3', 'ファ3', 
'ミ3', 'ファ3', 'ソ3', 'ミ3', 'ソ3', 'ミ3', 'ソ3', 
'ファ3', 'ソ3', 'ラ3', 'ラ3', 'ソ3', 'ファ3', 'ラ3', 'ソ3', 'ド3', 'レ3', 'ミ3', 'ファ3', 'ソ3', 'ラ3', 
'ラ3', 'レ3', 'ミ3', 'ファ3', 'ソ3', 'ラ3', 'シ3', 
'シ3', 'ミ3', 'ファ3', 'ソ3', 'ラ3', 'シ3', 'ド4', 
'ド4', 'シ3', 'ラ3', 'ファ3', 'シ3', 'ソ3', 'ド4', 
),

'阪急の歌' : (
'ド3', 'レ3', 'ミ3', 'ソ3', 'ソ3', 'ミ3', 'ソ3', 'ラ3', 'ソ3', 'ミ3', 'ソ3', 'レ3', 'ミ3', 'ド3', 
'ド3', 'レ3', 'ミ3', 'ソ3', 'ソ3', 'ミ3', 'ソ3', 'ラ3', 'ソ3', 'ミ3', 'ソ3', 'ミ3', 'シ3', 'ラ3', 
'ド4', 'シ3', 'ラ3', 'ド4', 'ド4', 'ラ3', 'ド4', 'ド4', 'シ3', 'ラ3', 'シ3', 'ソ3', 'ラ3', 'ミ3', 
'ミ3', 'レ3', 'ラ2', 'ミ3', 'レ3', 'ラ2', 'ラ2', 'ミ3', 'レ3', 'ミ3', 'ソ3', 'ミ3', 'シ3', 'ラ3', 
),

'きらきら星':('ド2', 'ド2', 'ソ2', 'ソ2', 'ラ2', 'ラ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'レ2', 'ド2', 'ソ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'ソ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'ド2', 'ド2', 'ソ2', 'ソ2', 'ラ2', 'ラ2', 'ソ2', 'ファ2', 'ファ2', 'ミ2', 'ミ2', 'レ2', 'レ2', 'ド2', ),

'チューリップ':('ド2', 'レ2', 'ミ2', 'ド2', 'レ2', 'ミ2', 'ソ2', 'ミ2', 'レ2', 'ド2', 'レ2', 'ミ2', 'レ2', 'ド2', 'レ2', 'ミ2', 'ド2', 'レ2', 'ミ2', 'ソ2', 'ミ2', 'レ2', 'ド2', 'レ2', 'ミ2', 'ド2', 'ソ2', 'ソ2', 'ミ2', 'ソ2', 'ラ2', 'ラ2', 'ソ2', 'ミ2', 'ミ2', 'レ2', 'レ2', 'ド2',),

'颯くんオリジナル':('ラ2', 'ファ3', 'シ2', 'ソ2', 'ソ3', 'ド3', 'ラ3', 'シ3', 'ミ3', 'シ3', 'ド4', 'ミ3', 'レ4', 'ラ3', 'シ3', 'ミ4', 'ファ3', 'ソ3', 'ラ2', 'ファ3', 'ソ3', 'ミ3', 'レ3', 'ミ3', 'レ4', 'ラ2', 'シ2', 'ラ2', 'ミ3', 'ファ3', 'ソ2', 'シ2', 'レ3', 'シ2', 'ソ2', 'レ2', 'ソ2', 'ラ2', 'ミ2', 'シ2', 'ソ2', 'ミ2', 'ソ2', 'ラ2', 'ミ2', 'ラ2', 'シ2', 'ファ2', 'レ2', 'ファ2', 'ファ2', 'ド3', 'ソ2', 'ファ3', 'ラ2', 'ソ3', 'ド3', 'ソ2', 'ソ3', 'ファ3', 'ファ4', 'ファ3', 'ミ3', 'ソ3', 'ド4', 'ファ3', 'ド3', 'ファ3', 'レ3', 'シ2', 'ラ2', 'ソ2', 'シ2', 'ミ3', 'ファ3', 'レ3', 'ミ2', 'ド3', 'ファ3', 'ド3', 'ソ3', 'シ3', 'ファ3', 'ド3', 'ミ3', 'ミ2', 'ミ3', 'シ2', 'ソ2', 'シ2', 'ファ3', 'シ2', 'ソ3', 'レ4', 'レ3', 'ソ2', 'ミ2', 'ソ3', 'シ2', 'シ2', 'シ2', 'ソ2', 'レ3', 'ファ2', 'ミ3', 'ソ3', 'シ2', 'ソ3', 'レ3', 'ド3', 'ド3', 'ミ3', 'ド3', 'ラ2', 'ファ3', 'ド4', 'シ2', 'ラ3', 'ド4', 'シ2', 'レ3', 'ファ2', 'ラ3', 'ソ3', 'レ3', 'ラ3', 'ファ3', 'ミ3', 'シ3', 'ソ3', 'シ2', 'ラ2', 'ミ3', 'シ2', 'ラ3', 'ド3', 'ラ2', 'ファ3', 'ファ3', 'シ2', 'ソ3', 'ラ3', 'ミ3', 'ファ3', 'ミ4', 'ミ4', 'ソ3', 'ミ3', 'ド4', 'ソ3', 'ソ2', 'レ3', 'ファ3', 'シ3', 'レ4', 'ド4', 'レ3', 'ド3', 'ド3', 'ファ3', 'ソ3', 'レ3', 'シ2', 'ラ3', 'ファ4', 'ド3', 'ソ3', 'ソ3', 'シ2', 'ミ3', 'ド4', 'ソ3', 'ド3', 'ミ3', 'ラ3', 'シ2', 'ミ3', 'ソ3', 'ド3', 'ソ3', 'ド3', 'ド2', 'ド2', 'ド2', 'ド2', 'ド2', 'レ2', 'ミ2', 'ソ2', 'ソ2', 'ミ2', 'ラ2', 'シ2', 'ソ2', 'ミ3', 'ソ2', 'レ3', 'ソ2', 'ド2', 'レ2', 'ミ2', 'ソ2', 'ソ2', 'ファ2', 'ソ2', 'ファ2', 'ラ2', 'シ2', 'ソ2', 'シ2', 'ミ3', 'シ2', 'ミ3', 'ファ3', 'ラ2', 'ソ3', 'ド3', 'ファ3', 'ド3', 'ミ3', 'ファ3', 'ド3', 'ファ3', 'シ3', 'ファ3', 'ラ3', 'ラ3', 'ラ3', 'ラ3', 'ラ3', 'ラ3', 'ソ3', 'ラ3', 'レ4', 'レ3', 'ミ2', 'ファ3', 'ミ3', 'ミ3', 'ファ2', 'ド3', 'ド3', ),
} # Melodiesここまで

# 音階表示
MeloViewConf = namedtuple('MeloViewConf', 'pos, color, fSize, anchor')
MeloViews = {
	'L' : MeloViewConf((.470, .05), '#42b34c', 24, ( 1.0, .5)),
	'C' : MeloViewConf((.500, .06), '#f9ff71', 36, (  .5, .5)),
	'R' : MeloViewConf((.535, .05), '#42b34c', 24, (-1.0, .5)),
}

'''
ボタン
'''
class ButtonNode (SpriteNode):
	def __init__(self, title, *args, **kwargs):
		SpriteNode.__init__(self, 'plc:Tree_Ugly', *args, **kwargs)
		button_font = ('Avenir Next', 20)
		self.title_label = LabelNode(title, font=button_font, color='black', position=(0, 1), parent=self)
		self.title = title

'''
シーン
- タップ判定はすべてここで行われる
'''
class MyScene (Scene):
	'''
	初期設定
	'''
	def setup(self):
		# 画面サイズの取得
		dp('size', self.size)
		dp('bounds', self.bounds)

		# ビューの設定
		self.background_color = 'green'
		
		# ダンゴムシの設定
		self.dango = []
		dango = DG()
		dango.position = self.size / 2
		self.dango.append(dango)
		self.add_child(dango)

		# BGM
		if PLAY_BGM:
			self.bgm = sound.play_effect(BGM, looping=True)
			#self.bgm.volume = .2

		# 音階表示
		self.lbl = {}
		for idx,(key, conf) in enumerate(MeloViews.items()):
			lbl = LabelNode(key, font=('Helvetica', conf.fSize))
			lbl.position = self.size * conf.pos
			if conf.anchor != None: lbl.anchor_point = conf.anchor
			lbl.color = conf.color
			self.add_child(lbl)
			self.lbl[key] = lbl
		
		# メロディ設定
		self.mIdx = 0
		self.keyIdx = 0
		self.SetMelody(self.mIdx)
		
		# ボタン
		btn = ButtonNode('', parent=self)
		btn.anchor_point = (-1.0, 1.0)
		btn.position = self.size * (0, 1.0)
		self.add_child(btn)
		self.btn = btn

	'''
	バツボタンで閉じられた
	'''
	def stop(self):
		sound.stop_all_effects()

	'''
	サイズが変更された
	'''
	def did_change_size(self):
		pass

	'''
	更新(毎フレ呼ばれる)
	'''
	def update(self):
		pass

	'''
	タッチ開始された
	'''
	def touch_began(self, touch):
		x,y = touch.location
		d = self.dango[0]
		dp('touch' + str(touch.location))

		# タップ判定
		if touch.location in self.btn.frame:
			# ボタン
			sound.play_effect('arcade:Jump_3')
			idx = self.mIdx + 1
			if idx >= len(Melodies): idx = 0
			self.SetMelody(idx)

		elif d.IsTouch(touch):
			# ダンゴムシ
			kStr = self.melody[self.keyIdx]
			kConf = MKey[kStr]
			sound.play_effect(kConf.file)
			self.keyIdx += 1
			if self.keyIdx >= len(self.melody): self.keyIdx = 0
			self.UpdateMeloView()

			d.ChgeForm(formBall=True)

		else:
			# タップした位置にダンゴムシを移動
			d.ChgeForm(formBall=False)
			move_action = Action.move_to(x, y, 0.7, TIMING_SINODIAL)
			d.run_action(move_action)
			sound.play_effect('arcade:Jump_1')
	
	'''
	曲の設定
	'''
	def SetMelody(self, idx):
		if idx < 0 or len(Melodies) <= idx: assert False, str(idx) + ' is invalid index'
		for i, (key, val) in enumerate(Melodies.items()):
			if i == idx:
				self.melody = val
				self.mIdx = idx
				self.keyIdx = 0
				self.UpdateMeloView()
				break

	'''
	音階表示の更新
	'''
	def UpdateMeloView(self):
		i = self.keyIdx
		m = self.melody
		
		def MName(idx, melody):
			if idx < 0: return ''
			if idx >= len(melody): return ''
			key = melody[idx]
			return MKey[key].name

		strL = ''
		for ofs in range(3, 2, -1):
			strL += MName(i-ofs, m)
		self.lbl['L'].text = strL

		self.lbl['C'].text = MName(i-1, m)

		strR = ''
		for ofs in range(0, 6, 1):
			strR += MName(i+ofs, m)
		self.lbl['R'].text = strR


	'''
	ムーブ中
	'''
	def touch_moved(self, touch):
		pass

	'''
	タッチがリリースされた
	'''
	def touch_ended(self, touch):
		pass

'''
メイン処理
'''
if __name__ == '__main__':
	run(MyScene(), show_fps=DEBUG)
